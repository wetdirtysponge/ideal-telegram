// –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
const { Telegraf } = require('telegraf');
const fs = require('fs');

// üîπ –¢–í–û–ô –¢–û–ö–ï–ù ‚Äî –≤—Å—Ç–∞–≤—å —Å–≤–æ–π!
const bot = new Telegraf('8277984582:AAEukchFHOd5ByCtxBNODblta7qw8vdtV6I');
// üìÇ –ü—É—Ç—å –∫ JSON —Å –∏–≥—Ä–∞–º–∏ (–ª–µ–∂–∏—Ç —Ä—è–¥–æ–º —Å updates.js)
const GAMES_FILE = './games.json';

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä
function loadGames() {
    if (!fs.existsSync(GAMES_FILE)) {
        fs.writeFileSync(GAMES_FILE, '[]', 'utf8'); // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
    }
    return JSON.parse(fs.readFileSync(GAMES_FILE, 'utf8'));
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä
function saveGames(games) {
    fs.writeFileSync(GAMES_FILE, JSON.stringify(games, null, 2), 'utf8');
}

// –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
bot.start((ctx) => {
    ctx.reply("–ü—Ä–∏–≤–µ—Ç! –ö–æ–º–∞–Ω–¥—ã:\n/list ‚Äî —Å–ø–∏—Å–æ–∫ –∏–≥—Ä\n/setprice ID —Ü–µ–Ω–∞ ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É\n/addgame –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É");
});

// üìú –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä
bot.command('list', (ctx) => {
    const games = loadGames();
    if (games.length === 0) return ctx.reply("üìÇ –°–ø–∏—Å–æ–∫ –∏–≥—Ä –ø—É—Å—Ç");

    let message = "üìú –°–ø–∏—Å–æ–∫ –∏–≥—Ä:\n";
    games.forEach(game => {
        message += 'ID: ${game.id} ‚Äî ${game.name} ‚Äî ${game.price} ‚ÇΩ\n';
    });
    message += '\n–í—Å–µ–≥–æ –∏–≥—Ä –≤ —Å–ø–∏—Å–∫–µ: ${games.length}';
    ctx.reply(message);
});

// üí∞ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É
bot.command('setprice', (ctx) => {
    const args = ctx.message.text.split(' ');
    if (args.length !== 3) {
        return ctx.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: /setprice ID_–∏–≥—Ä—ã –Ω–æ–≤–∞—è_—Ü–µ–Ω–∞");
    }

    const id = parseInt(args[1]);
    const newPrice = parseInt(args[2]);

    let games = loadGames();
    const game = games.find(g => g.id === id);

    if (!game) return ctx.reply("‚ùå –ò–≥—Ä–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");

    game.price = newPrice;
    saveGames(games);

    ctx.reply('‚úÖ –¶–µ–Ω–∞ –¥–ª—è "${game.name}" –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ ${newPrice} ‚ÇΩ');
});

// ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
bot.command('addgame', (ctx) => {
    const args = ctx.message.text.split(' ');

    if (args.length < 4) {
        return ctx.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: /addgame –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–Ω–∞ —Å—Å—ã–ª–∫–∞_–Ω–∞_–∫–∞—Ä—Ç–∏–Ω–∫—É");
    }

    const price = parseInt(args[args.length - 2]);
    const image = args[args.length - 1];
    const name = args.slice(1, args.length - 2).join(' '); // –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤

    let games = loadGames();

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π ID
    const id = games.length > 0 ? games[games.length - 1].id + 1 : 1;

    games.push({ id, name, price, image });
    saveGames(games);

    ctx.reply('‚úÖ –ò–≥—Ä–∞ "${name}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å ID ${id}! –¢–µ–ø–µ—Ä—å –≤ —Å–ø–∏—Å–∫–µ ${games.length} –∏–≥—Ä.');
});

// üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");
